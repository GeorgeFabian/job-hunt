upstream app_cstan_ws {
	server 127.0.0.1:1337;
	keepalive 8;	
}

upstream app_cstan_rtc {
	server 127.0.0.1:8427;
	keepalive 8;	
}

upstream app_cstan {
	server 127.0.0.1:8443;
	keepalive 8;	
}

server {
	
	location ~ /.well-known {
		allow all;
	}

	listen 443 ssl;
	listen [::]:443 ssl;
	
	server_name colinstanton.com;

	access_log /var/log/nginx/cstan.log;
	error_log /var/log/nginx/cstan.err debug;

	#pass the request to the node.js server with the correct headers
	#and much more can be added, see nginx config options
	location / {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Nginx-Proxy true;

		proxy_pass https://app_cstan;
		proxy_redirect off;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	location /ws {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Nginx-Proxy true;

		proxy_pass https://app_cstan_ws/;
		proxy_redirect off;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";

		proxy_connect_timeout 1d;
		proxy_send_timeout 1d;
		proxy_read_timeout 1d;
	}

	location /rtc {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Nginx-Proxy true;

		proxy_pass https://app_cstan_rtc/;
		proxy_redirect off;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";

		proxy_connect_timeout 1d;
		proxy_send_timeout 1d;
		proxy_read_timeout 1d;
	}
}
	

server {
	listen 80;
	server_name colinstanton.com;
	return 301 https://$host$request_uri;
}


